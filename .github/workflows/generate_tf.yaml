name: Clone External Repos and push terraform files on ddlforge-cli terraform-automation branch

on:
  push:
    branches:
      - main

jobs:
  run-on-main-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          path: updates-to-merge

      - name: Clone external repo secrets
        uses: actions/checkout@v4
        with:
          ref: main
          repository: giorgiogrillini-capgemini/secrets
          token: ${{ secrets.PAT_DDLFORGE }}
          path: secrets

      #TODO replace it downloading pipy private package
      - name: Clone external repository to get ddlforge-cli
        uses: actions/checkout@v4
        with:
          ref: main
          repository: giorgiogrillini-capgemini/ddlforge-cli
          token: ${{ secrets.PAT_DDLFORGE }}
          path: ddlforge-cli

      #TODO use cache!! and/or predefined artifact registry image
      - name: Installing venv and launching ddlforge-cli to check if the ddl can be generated
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_DDLFORGE }}
        run: |
          cd ddlforge-cli
          sudo apt-get update -y
          sudo apt-get install -y pipx age gh
          pipx ensurepath
          pipx install uv
          pipx ensurepath
          uv python install 3.12
          uv venv --python 3.12
          source .venv/bin/activate
          uv pip install -e .
          echo "Decrypting SA"
          curl -LO https://github.com/getsops/sops/releases/download/v3.10.2/sops-v3.10.2.linux.amd64
          mv sops-v3.10.2.linux.amd64 /usr/local/bin/sops
          chmod +x /usr/local/bin/sops
          echo ${{ secrets.AGE_PRIVATE }} > ci.key
          export SOPS_AGE_KEY_FILE=ci.key
          sops decrypt ../secrets/sa-keys/git-datacloud-dev-owner-sa.json > sa.json
          echo "Authenticating with google SA"
          export GOOGLE_APPLICATION_CREDENTIALS=sa.json
          echo "producing settings.yaml"
          ddlforge settings --google_project_id premi0436563-gitenter\
           --policy_location europe-west9 --write_to settings.yaml\
           --env_label dev --key_ring_name datacloud-cstore-europe-west9-main-dev\
           --json_schema_asset_dir table-schemas 1918308629030057169
          echo "creating tf files"
          
          echo "opening a PR to merge new changes to main"
          git config --local user.name "GitHub Action"
          git config --local user.email "action@github.com"
          echo "Creating new branch 'terraform-automation'"
          git checkout -b terraform-automation-${{ github.run_number }}
          ddlforge tf-table-configs src/tests/sample_2.ddl settings.yaml ./tf
          echo "Adding terraform scripts to branch"
          git add tf/
          git commit -m "Add terraform scripts - version: 0.1.${{ github.run_number }}"
          echo "Pushing branch 'terraform-automation'"
          git push origin terraform-automation-${{ github.run_number }}
          echo "Creating Pull Request in ddlforge-cli repository"
          if gh pr list --head terraform-automation-${{ github.run_number }} | grep -q 'terraform-automation-${{ github.run_number }}'; then
            echo "Pull request already exists."
          else
            gh pr create --base main --head terraform-automation-${{ github.run_number }} --title "Terraform scripts update - version: 0.1.${{ github.run_number }}" --body "Automated PR for terraform scripts changes."
          fi


